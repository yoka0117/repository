<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 namespace：必须有值，自定义的唯一字符串
 推荐使用：dao 接口的全限定名称
-->
<mapper namespace="com.huzi.dao.InventoryDao">
    <!--
    <select>: 查询数据， 标签中必须是 select 语句
    id: sql 语句的自定义名称，推荐使用 dao 接口中方法名称，
    使用名称表示要执行的 sql 语句
    resultType: 查询语句的返回结果数据类型，使用全限定类名
    -->
<resultMap id="inventoryMap" type="com.huzi.domain.Warehouse.Inventory">
    <id column="inventory_id" property="inventoryId"></id>
    <result column="sku_id" property="skuId"></result>
    <result column="warehouse_id" property="warehouseId"></result>
    <result column="inventory_physical" property="physicalInventory"></result>
    <result column="inventory_real" property="realInventory"></result>
</resultMap>


<!--1新建商品库存-->
    <insert id="insertInventory"  parameterType="com.huzi.domain.Warehouse.Inventory">
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="inventoryId">
            select LAST_INSERT_ID()
        </selectKey>
        insert into t_inventory(sku_id,warehouse_id,inventory_physical,inventory_real)
        values(#{skuId},#{warehouseId},#{physicalInventory},#{realInventory})
    </insert>

    <!--根据warehouseId和skuId查询-->
    <select id="selectInventory" resultMap="inventoryMap" >
            select inventory_id,sku_id,warehouse_id,inventory_physical,inventory_real
            from t_inventory
            where sku_id = #{skuId} and  warehouse_id = #{warehouseId}
    </select>



    <!--2增加库存-->
    <update id="updateInventory" parameterType="com.huzi.domain.Warehouse.InventoryParam">
         update t_inventory set inventory_physical =inventory_physical + #{physicalInventoryAdd},
                                inventory_real=inventory_real + #{realInventoryAdd}
        where inventory_id = #{inventoryId}
    </update>

    <!--减少real库存(通过skuId and warehouseId)-->
    <update id="updateInventoryCutReal" parameterType="com.huzi.domain.Warehouse.InventoryParam">
        update t_inventory set  inventory_real=inventory_real - #{realInventoryAdd}
        where sku_id = #{skuId} and warehouse_id = #{warehouseId} and inventory_real - #{realInventoryAdd} >=0
    </update>

    <!--增加real库存(通过skuId and warehouseId)-->
    <update id="updateInventoryAdd" parameterType="com.huzi.domain.Warehouse.InventoryParam">
        update t_inventory set  inventory_real=inventory_real + #{realInventoryAdd}
        where sku_id = #{skuId} and warehouse_id = #{warehouseId}
    </update>

    <!--减少physical库存(通过skuId and warehouseId)-->
    <update id="updateInventoryCutPhysical" parameterType="com.huzi.domain.Warehouse.InventoryParam">
        update t_inventory set  inventory_physical=inventory_physical - #{physicalInventoryAdd}
        where sku_id = #{skuId} and warehouse_id = #{warehouseId}
    </update>
</mapper>